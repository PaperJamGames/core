<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>intensity = 1;
min_speed = .2;
angle = 90;
follow = PlayerObject;
straightTrail = false;
straightTrailLength = 5;
scaleFactor = .25;
scale = 1;
trailLength = 1;
sprite = PlayerSprite;

//init trail array
for(i = 0; i &lt; 100; i++){
    trail[i,0] = x;
    trail[i,1] = y;
} 

//sprite color
color = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(instance_exists(follow)){
    x = follow.x;
    y = follow.y;
    image_angle = follow.image_angle;
} else {
    instance_destroy();
}

for(i = trailLength; i &gt; 0; i-=1){
    trail[i, 0] = trail[i-1,0];
    trail[i, 1] = trail[i-1,1];
}

trail[0,0] = x;
trail[0,1] = y; 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//color = make_colour_rgb(red, green, blue);

//trailSprites=point_distance(x, y, trail[1,0], trail[1,1]);
//trailDir=point_direction(x, y, trail[1,0], trail[1,1]);
draw_set_blend_mode(bm_normal);
draw_sprite_ext(sprite, -1, x, y, scaleFactor, scaleFactor, image_angle, color, 1);
draw_set_blend_mode(bm_add);
//scale = 1;
if(straightTrail){
    trailSprites=point_distance(x, y, xprevious, yprevious)*straightTrailLength;
    trailDir=point_direction(x, y, xprevious, yprevious);
    for (drawlength=0; drawlength&lt;=trailSprites; drawlength+=1){
        scale = 1 - drawlength / (trailSprites + 1);
        draw_sprite_ext(sprite, -1, x + lengthdir_x(drawlength,trailDir), y + lengthdir_y(drawlength,trailDir), scale * scaleFactor, scale * scaleFactor, image_angle, color, (1 / (drawlength + 1))*intensity);
    }
    exit;
}
for(i = 0; i &lt; trailLength; i++){
    trailSprites=point_distance(trail[i,0], trail[i,1], trail[i+1,0], trail[i+1,1]);
    trailDir=point_direction(trail[i,0], trail[i,1], trail[i+1,0], trail[i+1,1]);
    alpha = 1/(i+1);

    if(trailSprites != 0){ 
        scale =  1 - i / trailLength;
        if(scale &lt;= 0){
            scale = 0;
        }
        nextScale = 1 - ((i + 1) / trailLength);
    } else {
        scale = 1;
    }
    
    scaleStep = 0;
    
    if(trailSprites != 0){ 
        scaleStep = (scale - nextScale) / trailSprites;
    }
    
    for (drawlength=0; drawlength&lt;=trailSprites; drawlength+=1){
        
        if(trailSprites != 0){ 
            scale -= scaleStep;
        }
        
        if(scale &lt;= 0){
            scale = 0;
        }
        if(abs(x-xprevious) &gt; min_speed &amp;&amp; abs(y-yprevious) &gt; min_speed){
            draw_sprite_ext(sprite, -1, trail[i,0]+lengthdir_x(drawlength,trailDir), trail[i,1]+lengthdir_y(drawlength,trailDir), scale * scaleFactor, scale * scaleFactor, image_angle, color, alpha * intensity);
        }
    }
}
//draw_sprite_ext(PlayerTriangleGlow, -1, x, y, scaleFactor, scaleFactor, image_angle, color, .5);
//draw_sprite_ext(PlayerTriangleGlow, -1, x, y, scaleFactor*0.7, scaleFactor*0.7, image_angle, color, .5);

draw_set_blend_mode(bm_normal);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
